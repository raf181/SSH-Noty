name: release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goarch: [amd64, arm64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'
      - name: Download modules
        run: go mod download
      - name: Build
        env:
          GOOS: linux
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: "0"
        run: |
          mkdir -p dist
          # Try common candidate main package paths first
          CANDIDATES=(
            "./cmd/ssh-noti"
            "./cmd/ssh-notify"
            "./cmd"
            "."
          )
          PKG=""
          for c in "${CANDIDATES[@]}"; do
            if [[ -f "$c/main.go" ]]; then
              PKG="$c"
              break
            fi
          done
          # Fallback: scan with go list for any main package
          if [[ -z "$PKG" ]]; then
            echo "Default candidates not found; attempting go list scan..."
            PKG=$(go list -f '{{if eq .Name "main"}}{{.Dir}}{{end}}' ./... | grep -v '^$' | head -n1 || true)
          fi
          # Diagnostics if still not found
          if [[ -z "$PKG" ]]; then
            echo "ERROR: Could not locate a main package to build. Ensure your main package is committed (e.g., ./cmd/ssh-noti/main.go)." >&2
            echo "Repo tree (top-level):"; ls -la
            echo "cmd/ tree:"; ls -la cmd || true
            echo "go list output:"; go list ./... || true
            exit 1
          fi
          echo "Building package: $PKG"
          go build -ldflags "-X main.Version=${GITHUB_REF_NAME}" -o dist/ssh-noti_linux_${GOARCH} "$PKG"
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ssh-noti_linux_${{ matrix.goarch }}
          path: dist/ssh-noti_linux_${{ matrix.goarch }}

  release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/ssh-noti_linux_amd64
            dist/ssh-noti_linux_arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}